#include <stdio.h>
int main()
{
    int n = 6; //размер матрицы
    int a [6][6];
    for (int ik=0; ik<n; ik++){
        for (int jk = 0; jk<n; jk++){
            int i = ik + 1;
            int j = jk + 1;

            //опредиляем максимальное число в каждой диагонали до центральной диагонали
            int D = i + j - 1; // номер диагонали
            int max1 = (D * D + D) / 2;//максимальное значение диагоналей до центральной

            //опредиляем максимальное число в каждой диагонали после центральной диагонали
            int max2 = (n * n + n) / 2 +((3 * n - D - 1) * (D - n)) / 2;//максимальное значение диагоналей после центральной

            //объединяем предыдущии формулы в одну
            int dd = abs (D/(n+1) - 1); // диагогналь до центра
            int dp = D/(n+1);// диагональ после центра
            a [ik][jk] = dd * max1 + dp * max2;

            // опредиляем чётность и нечётность диагонали
            int dn = D % 2; // оперделитель нечётной диагонали
            int dch = (D + 1 ) % 2; // определитель чётной диагонали

            a [ik][jk] = dd * ((max1 - i + 1)* dch + (max1 - j + 1)* dn) + dp * max2; // змеёка до центральной диагонали
            a [ik][jk] = dd * ((max1 - i + 1)* dch + (max1 - j + 1)* dn) + dp * (max2 - (n - j));// змейка после цинтральной диагонали
        }
    }

    for (int ik=0; ik<n; ik++){
        for (int jk = 0; jk<n; jk++)
            printf (" %d ", a[ik][jk]);
        printf("\n");
    }
 return 0;
}
